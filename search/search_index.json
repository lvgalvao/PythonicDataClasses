{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Refer\u00eancia dos nossos modelos","text":"<p>Aqui est\u00e3o as classes do nosso projeto</p>"},{"location":"#classes","title":"Classes","text":""},{"location":"#personagem","title":"Personagem","text":"<p>             Bases: <code>BaseModel</code></p> <p>Representa um personagem com atributos espec\u00edficos.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>O identificador \u00fanico do personagem.</p> required <code>name</code> <code>str</code> <p>O nome do personagem.</p> required <code>status</code> <code>str</code> <p>O status atual do personagem.</p> required <code>species</code> <code>str</code> <p>A esp\u00e9cie do personagem.</p> required <code>gender</code> <code>str</code> <p>O g\u00eanero do personagem.</p> required <code>url</code> <code>HttpUrl</code> <p>O URL associado ao personagem, deve ser uma string v\u00e1lida de URL.</p> required Example <p>Instanciando e acessando os atributos de <code>Personagem</code>:</p> <pre><code>rick = Personagem(\n    id=1,\n    name=\"Rick Sanchez\",\n    status=\"Alive\",\n    species=\"Human\",\n    gender=\"Male\",\n    url=\"https://rickandmortyapi.com/api/location/3\"\n)\nprint(rick.id)  # Output: 1\n\nmorty = Personagem(\n    id=2,\n    name=\"Morty Smith\",\n    status=\"Alive\",\n    species=\"Human\",\n    gender=\"Male\",\n    url=\"https://rickandmortyapi.com/api/location/3\"\n)\nprint(morty.name)  # Output: 'Morty Smith'\n</code></pre> <p>Voc\u00ea pode acessar os atributos como <code>rick.id</code>, <code>rick.name</code>, etc.</p> Source code in <code>src/models.py</code> <pre><code>class Personagem(BaseModel):\n    \"\"\"\n    Representa um personagem com atributos espec\u00edficos.\n\n    Args:\n        id (int): O identificador \u00fanico do personagem.\n        name (str): O nome do personagem.\n        status (str): O status atual do personagem.\n        species (str): A esp\u00e9cie do personagem.\n        gender (str): O g\u00eanero do personagem.\n        url (HttpUrl): O URL associado ao personagem, deve ser uma string v\u00e1lida de URL.\n\n    Example:\n        Instanciando e acessando os atributos de `Personagem`:\n\n        ```python\n        rick = Personagem(\n            id=1,\n            name=\"Rick Sanchez\",\n            status=\"Alive\",\n            species=\"Human\",\n            gender=\"Male\",\n            url=\"https://rickandmortyapi.com/api/location/3\"\n        )\n        print(rick.id)  # Output: 1\n\n        morty = Personagem(\n            id=2,\n            name=\"Morty Smith\",\n            status=\"Alive\",\n            species=\"Human\",\n            gender=\"Male\",\n            url=\"https://rickandmortyapi.com/api/location/3\"\n        )\n        print(morty.name)  # Output: 'Morty Smith'\n        ```\n\n    Voc\u00ea pode acessar os atributos como `rick.id`, `rick.name`, etc.\n    \"\"\"\n\n    id: int\n    name: str\n    status: str\n    species: str\n    gender: str\n    url: HttpUrl  # O campo URL deve ser uma string.\n</code></pre>"}]}